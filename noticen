#!/bin/bash
#
# This script should be called as follows
# (only use this format if calling from udev rules, cron,
# NetworkManager dispatcher, etc.)
# /usr/bin/su -l YOUR_USERNAME -c 'mynotif -OPT PARAM1 PARAM2 ...'
#
# else
#
# mynotif -OPT PARAM1 PARAM2 ...
#

# Define noticen path
MYPATH="${HOME}/.local/noticen"

if [[ $1 == "--status" ]]; then
    echo "$2" > "${MYPATH}/status"
    exit
fi

STATUS="$(cat "${MYPATH}/status")"

[[ $STATUS == "enable" ]] || exit

# Necessary variables for playback and popups
export DBUS_SESSION_BUS_ADDRESS="unix:path=/run/user/$(id -u)/bus"
export XDG_RUNTIME_DIR="/run/user/$(id -u)"
# On X11 you should (probably) add these:
# DISPLAY
# XAUTORITY

# Import tools
. "${MYPATH}/tools.import"

# Import sounds
. "${MYPATH}/sounds.import"

case "$1" in
    "-d")
        [[ $2 == "plug" || $2 == "unplug" ]] || exit 1
        if [[ "$2" == "plug" ]]; then
            $NH_PLAYER "$device_added_sound" >/dev/null 2>&1 &
        else
            $NH_PLAYER "$device_removed_sound" >/dev/null 2>&1 &
        fi
        $NH_NOTISEND "Device ${2}ged" "$3 on /dev/$4" >/dev/null 2>&1 &
        ;;
    "-s")
        [[ $2 == "enable" || $2 == "disable" ]] || exit 1
        $NH_PLAYER "$message_new_instant_sound" >/dev/null 2>&1 &
        $NH_NOTISEND "Device status changed" "$3 is ${2}d" >/dev/null 2>&1 &
        ;;
    "-n")
        [[ $2 == "up" || $2 == "down" ]] || exit 1
        $NH_PLAYER "$message_sound" >/dev/null 2>&1 &
        $NH_NOTISEND "Network Manager changed" "$3 is $2" >/dev/null 2>&1 &
        ;;
    "-r")
        $NH_PLAYER "$message_new_instant_sound" >/dev/null 2>&1 &
        # extract info from args
        info=$*
        # removing first (option) and second (device) args
        info="${info#* }"
        info="${info#* }"
        $NH_NOTISEND "RFKILL changed on $2" "$info" >/dev/null 2>&1 &
        ;;
    "-m")
        $NH_PLAYER "$device_added_sound" >/dev/null 2>&1 &
        # extract manufacturer and product from args
        mobile=$*
        # removing first (option) and second (protocol) args
        mobile="${mobile#* }"
        mobile="${mobile#* }"
        $NH_NOTISEND "$mobile connected" "Using $2 protocol" >/dev/null 2>&1 &
        ;;
    "-b")
        [[ $2 == "connect" || $2 == "disconnect" ]] || exit 1
        nohup "${MYPATH}/bt-helper" "$2" >/dev/null 2>&1 &
        ;;
    "-p")
        [[ $2 == "online" || $2 == "offline" ]] || exit 1
        if [[ "$2" == "online" ]]; then
            $NH_PLAYER "$device_added_sound" >/dev/null 2>&1 &
            $NH_NOTISEND "AC connected" "Charging..." >/dev/null 2>&1 &
        else
            $NH_PLAYER "$device_removed_sound" >/dev/null 2>&1 &
            $NH_NOTISEND "Running on battery" "Discharging..." >/dev/null 2>&1 &
        fi
        ;;
    "--gamma")
        $PLAYER "$message_new_instant_sound" &
        $NOTISEND "Gamma changed" "Setting $2 period"
        ;;
    "--record")
        [[ "$2" == "sound" ]] && RECTYPE="${2^}"
        [[ "$2" == "screen" ]] && RECTYPE="${2^}"
        [[ $3 == "start" || $3 == "stop" ]] || exit 1
        if [[ "$3" == "stop" ]]; then
            $PLAYER "$service_logout_sound" &
            $NOTISEND "${RECTYPE} recorder" "Recording stopped"
        else
            $PLAYER "$service_login_sound" &
            $SENDER -t "${4}000" "${RECTYPE} recorder" "Recording starts in ${4} seconds"
        fi
        ;;
    "--volume")
        $PLAYER "$audio_volume_sound" &
        ;;
    "--shutter")
        $PLAYER "$camera_shutter_sound" &
        ;;
    "--sysound")
        $NOTISEND "System sounds" "Turned $2"
        ;;
    *)
        echo default
        ;;
esac

exit 0
